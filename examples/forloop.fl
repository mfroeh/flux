setptr(ptr: i64**, other: i64*): i64 {
    *ptr = other;
    ret 1;
}

swapptr(a: i64**, b: i64**): void {
    *a = *b;
    ret;
}

setarr(ptr: i64[200]*, val: i64): i64 {
    (*ptr)[0] = val;
    ret 1;
}

testarr(arr: i64[20]): i64[20] {
    arr[0] = -200;
    ret arr;
}

fill(val: i64): i64[20] {
    let a: i64[20];
    for (let i = 0; i in [0, 20); i += 1;) -> a[i] = val;
    ret a;
}

set(ptr: i64*, val: i64*) => *ptr = *val;

main() : i64 {
    let i: i64;
    let a: i64[200];
    let size = 200;
    for (let i = 0; i in [0, size); i += 1;) -> set(&a[i], &i);
    // for (let i = 0; i in [0, size); i += 1;) -> a[i] *= i;

    let b = &a;
    let b: i64[200]* = &a;
    setarr(b, 222);

    let i: i64;
    let b = &i;
    swapptr(&b, &b);

    let arr = fill(20);
    arr = testarr(arr);

    ret arr[0];
}